on:
  push:
    branches: '**'

defaults:
  run:
    shell: bash
    working-directory: ./Dep.Tests/puppeteer/engine
    
jobs:
  puppeteer-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dep.tests
        uses: actions/checkout@v4
        with:
          repository: ONLYOFFICE-QA/Dep.Tests
          token: ${{ secrets.READ_PAT }}
          path: Dep.Tests
          ref: master

      - name: Set submodule pat token
        run: git config --global url."https://${{ secrets.READ_PAT }}:@git.onlyoffice.com/".insteadOf "https://git.onlyoffice.com/"

      - name: Update submodules
        working-directory: ./Dep.Tests
        run: git submodule update --init puppeteer/files

      - uses: browser-actions/setup-chrome@v1
        with:
          install-dependencies: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Prepare env
        run: npm install

      - name: Run puppeteer
        env:
          CACHE_ENABLED: ${{ github.event.inputs.cache || true }}
        run: |
          # Prepare display
          sudo Xvfb -ac :99 -screen 0 1280x1024x16 > /dev/null 2>&1 &
          export DISPLAY=:99
          
          # Preload browser cache first
          if $CACHE_ENABLED; then
              python run.py config_chrome_linux.json --prcache
          fi
          
          # Run tests
          python run.py config_chrome_linux.json ${{ github.event.inputs.params}} | tee -a ./outputfile

      - name: Make job annotations
        if: always()
        run: |
            if [[ -f ./outputfile && $(cat ./outputfile | egrep -i 'Check errors in') ]]; then
             echo "### ðŸ”´ Some puppeteer tests failed!" >> $GITHUB_STEP_SUMMARY
             echo "" >> $GITHUB_STEP_SUMMARY
             echo "Please check job artifacts for more info" >> $GITHUB_STEP_SUMMARY
             echo "" >> $GITHUB_STEP_SUMMARY
             echo '$${\color{red}FailedTests:}$$' >> $GITHUB_STEP_SUMMARY
              while read p; do
                if [[ $(echo "${p}" | egrep -i 'Check errors in') ]]; then
                  st=$(echo "${p}" | egrep -i -o "\"${GITHUB_WORKSPACE}/(([a-zA-Z0-9.,_-]+)?/)+[a-zA-Z0-9.,_-]+.(.)\"" | tr -d '"')
                  echo "${st}"
                  echo "**${st}**" >> $GITHUB_STEP_SUMMARY
                fi     
              done <./outputfile
              exit 1
            else
              echo "### âœ… All puppeteer tests is passed" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**NOTE:** Results artifacts can be downloaded anyway" >> $GITHUB_STEP_SUMMARY
            fi
          
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Pupeeteer-result
          path: Dep.Tests/puppeteer/out
